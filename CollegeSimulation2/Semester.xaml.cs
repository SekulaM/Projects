using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace CollegeSimulation2
{
    /// <summary>
    /// Interaction logic for Semester.xaml
    /// </summary>
    public partial class Semester : Window
    {
        public static int semesterNum = 0;
        public List<Student> allStudents = new List<Student>();
        public List<Student> currentStudents = new List<Student>();
        public static List<Student> studentsWithFMark = new List<Student>();
        public bool retakes = false;

        Random random = new Random();
        public Semester()
        {
            //initialization
            DataAccess dataAccess = new DataAccess();
            InitializeComponent();
            semesterNum++;
            txtSemester.Text = semesterNum.ToString() + ". Semester";

            btnRetakes.IsEnabled = false;
            dgStudentsSemester.ItemsSource = dataAccess.LoadStudentList();
            HideColumns();
            allStudents = dataAccess.LoadStudentList();
            currentStudents = dataAccess.LoadStudentList();
        }

        //in the datagrid, show only subjects which are relevant for the current semester, hide the others
        public void HideColumns()
        {
            dgStudentsSemester.AutoGeneratedColumns += (s, e) =>
            {
                int count = dgStudentsSemester.Columns.Count;
                
                //make all invisible
                for (int i = 6; i < 19; i++)
                {
                    dgStudentsSemester.Columns[i].Visibility = Visibility.Collapsed;
                }

                //make the relevant columns visible
                if (semesterNum==1)
                {
                    // 1. semester 6,7,8
                    dgStudentsSemester.Columns[6].Visibility = Visibility.Visible;
                    dgStudentsSemester.Columns[7].Visibility = Visibility.Visible;
                    dgStudentsSemester.Columns[8].Visibility = Visibility.Visible;
                }
                else if (semesterNum == 2)
                {
                    // 2. semester 9,10,11
                    dgStudentsSemester.Columns[9].Visibility = Visibility.Visible;
                    dgStudentsSemester.Columns[10].Visibility = Visibility.Visible;
                    dgStudentsSemester.Columns[11].Visibility = Visibility.Visible;
                }
                else if (semesterNum == 3)
                {
                    // 3. semester 12,13,14
                    dgStudentsSemester.Columns[12].Visibility = Visibility.Visible;
                    dgStudentsSemester.Columns[13].Visibility = Visibility.Visible;
                    dgStudentsSemester.Columns[14].Visibility = Visibility.Visible;
                }
                else if (semesterNum == 4)
                {
                    // 4. semester 15,16,17
                    dgStudentsSemester.Columns[15].Visibility = Visibility.Visible;
                    dgStudentsSemester.Columns[16].Visibility = Visibility.Visible;
                    dgStudentsSemester.Columns[17].Visibility = Visibility.Visible;
                }
                else if (semesterNum >= 5)
                {
                    // final summary
                    dgStudentsSemester.Columns[18].Visibility = Visibility.Visible;
                }

            };

        }


        private void btnTestsResults_Click(object sender, RoutedEventArgs e)
        {
            btnRetakes.IsEnabled = true;
            txtAlert.Text = "Students who got an F have to retake all exams!";
            
            if (semesterNum == 1)
            {
                for (int i = 0; i < currentStudents.Count; i++)
                {
                    TestResults(currentStudents[i], "BusinessEnglish1", "AboutUS", "PodnikovaEkonomika");
                }
            }
            else if (semesterNum == 2)
            {
                for (int i = 0; i < currentStudents.Count; i++)
                {
                    TestResults(currentStudents[i], "BusinessEnglish2", "AboutUK", "Ucetnictvi");
                }
            }
            else if (semesterNum == 3)
            {
                for (int i = 0; i < currentStudents.Count; i++)
                {
                    TestResults(currentStudents[i], "BusinessEnglish3", "USLiterature", "Finance");
                }
            }
            else if (semesterNum == 4)
            {
                for (int i = 0; i < currentStudents.Count; i++)
                {
                    TestResults(currentStudents[i], "BusinessEnglish4", "UKLiterature", "Marketing");
                }
            }
            
            if (semesterNum == 4)
            {
                btnTestsResults.Content = "Average Grade";
                
            }
            else if (semesterNum == 5)
            {
                btnRetakes.IsEnabled = false;
                txtAlert.Text = "";

                for (int i = 0; i < currentStudents.Count; i++)
                {
                    GetTheAverageMark(currentStudents[i]);
                }
            }

        }

        //generate results for the test, each subject tests two skills
        //the formula : skill1 + skill2 + randomNumer (1-10) = final grade
        //the string subs parameters are used to identify the property of Student class
        private void TestResults(Student student, string sub1, string sub2, string sub3)
        {
            btnNextSemester.IsEnabled = true;
            btnTestsResults.IsEnabled = false;
            int subject1;
            int subject2;
            int subject3;


            Type typeStudent = student.GetType();
            //used to identify the property
            PropertyInfo propInfoSub1 = typeStudent.GetProperty(sub1);
            PropertyInfo propInfoSub2 = typeStudent.GetProperty(sub2);
            PropertyInfo propInfoSub3 = typeStudent.GetProperty(sub3);


            //Subject 1 test
            int rnd1 = random.Next(1, 11);
            subject1 = rnd1 + student.English + student.Math;

            //Subject 2 test
            int rnd2 = random.Next(1, 11);
            subject2 = rnd2 + student.English + student.Cramming;

            //Subject 3 test
            int rnd3 = random.Next(1, 11);
            subject3 = rnd3 + student.Cramming + student.Math;

            //Decide the points
            #region
            //decide the Subject 1  Mark
            if (subject1 >= 20)
            {
                propInfoSub1.SetValue(student, "A", null); 
            }
            else if (subject1 == 19 || subject1 == 18)
            {
                propInfoSub1.SetValue(student, "B", null);
            }
            else if (subject1 == 17 || subject1 == 16)
            {
                propInfoSub1.SetValue(student, "C", null);
            }
            else if (subject1 == 15 || subject1 == 14)
            {
                propInfoSub1.SetValue(student, "D", null);
            }
            else if (subject1 == 13 || subject1 == 12)
            {
                propInfoSub1.SetValue(student, "E", null);
            }
            else if (subject1 < 12)
            {
                propInfoSub1.SetValue(student, "F", null);
            }

            //decide the Subject 2 Mark
            if (subject2 >= 20)
            {
                propInfoSub2.SetValue(student, "A", null);
            }
            else if (subject2 == 19 || subject2 == 18)
            {
                propInfoSub2.SetValue(student, "B", null);
            }
            else if (subject2 == 17 || subject2 == 16)
            {
                propInfoSub2.SetValue(student, "C", null);
            }
            else if (subject2 == 15 || subject2 == 14)
            {
                propInfoSub2.SetValue(student, "D", null);
            }
            else if (subject2 == 13 || subject2 == 12)
            {
                propInfoSub2.SetValue(student, "E", null);
            }
            else if (subject2 < 12)
            {
                propInfoSub2.SetValue(student, "F", null);
            }

            //decide the Subject 3 Mark
            if (subject3 >= 20)
            {
                propInfoSub3.SetValue(student, "A", null);
            }
            else if (subject3 == 19 || subject3 == 18)
            {
                propInfoSub3.SetValue(student, "B", null);
            }
            else if (subject3 == 17 || subject3 == 16)
            {
                propInfoSub3.SetValue(student, "C", null);
            }
            else if (subject3 == 15 || subject3 == 14)
            {
                propInfoSub3.SetValue(student, "D", null);
            }
            else if (subject3 == 13 || subject3 == 12)
            {
                propInfoSub3.SetValue(student, "E", null);
            }
            else if (subject3 < 12)
            {
                propInfoSub3.SetValue(student, "F", null);
            }
            #endregion

            if (subject1 > 11 && subject2 > 11 && subject3 > 11)
            {
                student.TotalPoints += subject1 + subject2 + subject3;
            }
            
            if (retakes)
            {
                dgStudentsSemester.ItemsSource = null;
                dgStudentsSemester.ItemsSource = studentsWithFMark;

                //check students who have also failed any subject during retake, these will be dismissed from the university (removed from the list)
                if (propInfoSub1.GetValue(student).Equals("F") || propInfoSub2.GetValue(student).Equals("F") || propInfoSub3.GetValue(student).Equals("F"))
                {
                    currentStudents.Remove(student);
                }
                
            }
            else
            {
                //check students who failed any subject, they will be placed in the retake list
                if (propInfoSub1.GetValue(student).Equals("F") || propInfoSub2.GetValue(student).Equals("F") || propInfoSub3.GetValue(student).Equals("F"))
                {
                    studentsWithFMark.Add(student);
                }
                dgStudentsSemester.ItemsSource = null;
                dgStudentsSemester.ItemsSource = currentStudents;

                //disable next semester btn if retakes are neccessary
                if (studentsWithFMark.Count > 1)
                {
                    btnNextSemester.IsEnabled = false;
                }
                else
                {
                    btnNextSemester.IsEnabled = true;
                }
            }

        }

        private void btnNextSemester_Click(object sender, RoutedEventArgs e)
        {
            //update the semester
            studentsWithFMark.Clear();
            semesterNum++;
            dgStudentsSemester.ItemsSource = null;
            dgStudentsSemester.ItemsSource = currentStudents;
            retakes = false;
            txtAlert.Text = "";

            if (semesterNum==4)
            {
                btnNextSemester.Content = "Final Summary";

            }

            if (semesterNum>=5)
            {
                txtSemester.Text = "Summary";
            }
            else
            {
                txtSemester.Text = semesterNum.ToString() + ". Semester";
            }
            
            HideColumns();
            btnNextSemester.IsEnabled = false;
            btnTestsResults.IsEnabled = true;

        }

        //average mark based on average points
        private void GetTheAverageMark(Student student)
        {
            int averageMark = student.TotalPoints / 12;
            
            if (averageMark==20)
            {
                student.AverageGrade = "A";
            }
            else if (averageMark == 19 || averageMark ==18)
            {
                student.AverageGrade = "B";
            }
            else if (averageMark == 17 || averageMark == 16)
            {
                student.AverageGrade = "C";
            }
            else if (averageMark == 15 || averageMark == 14)
            {
                student.AverageGrade = "D";
            }
            else if (averageMark == 13 || averageMark == 12)
            {
                student.AverageGrade = "E";
            }

            if (retakes)
            {
                dgStudentsSemester.ItemsSource = null;
                dgStudentsSemester.ItemsSource = studentsWithFMark;
            }
            else
            {
                dgStudentsSemester.ItemsSource = null;
                dgStudentsSemester.ItemsSource = currentStudents;
            }

        }

        //students who got F will have the chance to try it again
        private void btnRetakes_Click(object sender, RoutedEventArgs e)
        {
            btnRetakes.IsEnabled = false;
            txtSemester.Text = "Retakes";
            retakes = true;
            txtAlert.Text = "Students who failed any exam during retakes will be dismissed!";

            if (semesterNum == 1)
            {
                for (int i = 0; i < studentsWithFMark.Count; i++)
                {
                    TestResults(studentsWithFMark[i], "BusinessEnglish1", "AboutUS", "PodnikovaEkonomika");
                }
            }
            else if (semesterNum == 2)
            {
                for (int i = 0; i < studentsWithFMark.Count; i++)
                {
                    TestResults(studentsWithFMark[i], "BusinessEnglish2", "AboutUK", "Ucetnictvi");
                }
            }
            else if (semesterNum == 3)
            {
                for (int i = 0; i < studentsWithFMark.Count; i++)
                {
                    TestResults(studentsWithFMark[i], "BusinessEnglish3", "USLiterature", "Finance");
                }
            }
            else if (semesterNum == 4)
            {
                for (int i = 0; i < studentsWithFMark.Count; i++)
                {
                    TestResults(studentsWithFMark[i], "BusinessEnglish4", "UKLiterature", "Marketing");
                }
            }
            
            dgStudentsSemester.ItemsSource = null;
            dgStudentsSemester.ItemsSource = studentsWithFMark;
        }

    }
}
